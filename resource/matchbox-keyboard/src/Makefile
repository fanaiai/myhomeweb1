# Makefile.in generated by automake 1.11.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.







am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/matchbox-keyboard
pkgincludedir = $(includedir)/matchbox-keyboard
pkglibdir = $(libdir)/matchbox-keyboard
pkglibexecdir = $(libexecdir)/matchbox-keyboard
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = armv7l-unknown-linux-gnueabihf
host_triplet = armv7l-unknown-linux-gnueabihf
#am__append_1 = $(GTK2_CFLAGS)
bin_PROGRAMS = matchbox-keyboard$(EXEEXT)
#am__append_2 = \
#	mb-gtk-keyboard.c		\
#	mb-gtk-keyboard.h		\
#	$(NULL)

#am__append_3 = $(GTK2_CFLAGS)
#am__append_4 = $(GTK2_LIBS)
subdir = src
DIST_COMMON = $(libmatchbox_keyboard_include_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/libmatchbox-keyboard.pc.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = libmatchbox-keyboard.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(libmatchbox_keyboard_includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
libmatchbox_keyboard_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am__libmatchbox_keyboard_la_SOURCES_DIST = libmatchbox-keyboard.c \
	libmatchbox-keyboard.h matchbox-keyboard.c matchbox-keyboard.h \
	matchbox-keyboard-layout.c matchbox-keyboard-row.c \
	matchbox-keyboard-key.c matchbox-keyboard-ui.c config-parser.c \
	util-list.c util.c matchbox-keyboard-ui-xft-backend.c \
	matchbox-keyboard-ui-xft-backend.h matchbox-keyboard-image.c \
	matchbox-keyboard-ui-cairo-backend.c \
	matchbox-keyboard-ui-cairo-backend.h matchbox-keyboard-popup.c \
	matchbox-keyboard-popup.h mb-gtk-keyboard.c mb-gtk-keyboard.h
am__objects_1 = libmatchbox_keyboard_la-matchbox-keyboard-ui-xft-backend.lo \
	libmatchbox_keyboard_la-matchbox-keyboard-image.lo
#am__objects_2 = libmatchbox_keyboard_la-matchbox-keyboard-ui-cairo-backend.lo \
#	libmatchbox_keyboard_la-matchbox-keyboard-popup.lo
#am__objects_3 = libmatchbox_keyboard_la-mb-gtk-keyboard.lo
am_libmatchbox_keyboard_la_OBJECTS =  \
	libmatchbox_keyboard_la-libmatchbox-keyboard.lo \
	libmatchbox_keyboard_la-matchbox-keyboard.lo \
	libmatchbox_keyboard_la-matchbox-keyboard-layout.lo \
	libmatchbox_keyboard_la-matchbox-keyboard-row.lo \
	libmatchbox_keyboard_la-matchbox-keyboard-key.lo \
	libmatchbox_keyboard_la-matchbox-keyboard-ui.lo \
	libmatchbox_keyboard_la-config-parser.lo \
	libmatchbox_keyboard_la-util-list.lo \
	libmatchbox_keyboard_la-util.lo $(am__objects_1) \
	$(am__objects_2) $(am__objects_3)
libmatchbox_keyboard_la_OBJECTS =  \
	$(am_libmatchbox_keyboard_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libmatchbox_keyboard_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am_matchbox_keyboard_OBJECTS = main.$(OBJEXT) \
	matchbox-keyboard-layout.$(OBJEXT) \
	matchbox-keyboard-xembed.$(OBJEXT) \
	matchbox-keyboard-remote.$(OBJEXT)
matchbox_keyboard_OBJECTS = $(am_matchbox_keyboard_OBJECTS)
matchbox_keyboard_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libmatchbox-keyboard.la
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libmatchbox_keyboard_la_SOURCES) \
	$(matchbox_keyboard_SOURCES)
DIST_SOURCES = $(am__libmatchbox_keyboard_la_SOURCES_DIST) \
	$(matchbox_keyboard_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(pkgconfig_DATA)
HEADERS = $(libmatchbox_keyboard_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/pi/matchbox-keyboard/missing --run aclocal-1.11
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
APPLET_CFLAGS = 
APPLET_LIBS = 
AR = ar
AUTOCONF = ${SHELL} /home/pi/matchbox-keyboard/missing --run autoconf
AUTOHEADER = ${SHELL} /home/pi/matchbox-keyboard/missing --run autoheader
AUTOMAKE = ${SHELL} /home/pi/matchbox-keyboard/missing --run automake-1.11
AWK = mawk
CAIRO_CFLAGS = 
CAIRO_LIBS = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXPAT_CFLAGS = 
EXPAT_LIBS = -lexpat
FAKEKEY_CFLAGS = -g -Wall -fno-strict-aliasing  
FAKEKEY_LIBS = -lX11 -lXtst -lfakekey  
FGREP = /bin/grep -F
GREP = /bin/grep
GTK2_CFLAGS = 
GTK2_LIBS = 
GTK_VERSION = 
HAVE_EXPAT = 1
HAVE_XMLPARSE_H = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBRARY_EXTRA_CFLAGS =  
LIBRARY_EXTRA_LIBS =  -lexpat
LIBRARY_REQUIRES = libfakekey xft xrender libpng
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/pi/matchbox-keyboard/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = matchbox-keyboard
PACKAGE_BUGREPORT = tomas@sleepfive.com
PACKAGE_NAME = matchbox-keyboard
PACKAGE_STRING = matchbox-keyboard 0.2
PACKAGE_TARNAME = matchbox-keyboard
PACKAGE_URL = 
PACKAGE_VERSION = 0.2
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PNG_CFLAGS = -I/usr/include/libpng12  
PNG_LIBS = -lpng12  
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.2
XFT_CFLAGS = -I/usr/include/freetype2  
XFT_LIBS = -lXft -lXrender -lX11  
abs_builddir = /home/pi/matchbox-keyboard/src
abs_srcdir = /home/pi/matchbox-keyboard/src
abs_top_builddir = /home/pi/matchbox-keyboard
abs_top_srcdir = /home/pi/matchbox-keyboard
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = armv7l-unknown-linux-gnueabihf
build_alias = 
build_cpu = armv7l
build_os = linux-gnueabihf
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = armv7l-unknown-linux-gnueabihf
host_alias = 
host_cpu = armv7l
host_os = linux-gnueabihf
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/pi/matchbox-keyboard/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
PREFIXDIR = $(prefix)
PKGDATADIR = $(datadir)/matchbox-keyboard
DATADIR = $(datadir)
pkgconfig_in_files = libmatchbox-keyboard.pc.in
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = $(pkgconfig_in_files:.pc.in=.pc)
BUILT_SOURCES = 
#CAIRO_BACKEND_C = \
#	matchbox-keyboard-ui-cairo-backend.c  \
#        matchbox-keyboard-ui-cairo-backend.h  \
#	matchbox-keyboard-popup.c	      \
#	matchbox-keyboard-popup.h

XFT_BACKEND_C = \
	matchbox-keyboard-ui-xft-backend.c                            \
        matchbox-keyboard-ui-xft-backend.h			      \
	matchbox-keyboard-image.c

INCLUDES = -DDATADIR=\"$(DATADIR)\" -DPKGDATADIR=\"$(PKGDATADIR)\" \
	-DPREFIX=\"$(PREFIXDIR)\" $(FAKEKEY_CFLAGS) $(XFT_CFLAGS) \
	$(EXPAT_CFLAGS) $(CAIRO_CFLAGS) $(PNG_CFLAGS) $(am__append_1)
lib_LTLIBRARIES = libmatchbox-keyboard.la
libmatchbox_keyboard_includedir = $(includedir)/libmatchbox-keyboard
libmatchbox_keyboard_include_HEADERS = $(lib_headers)
lib_headers = libmatchbox-keyboard.h mb-gtk-keyboard.h
libmatchbox_keyboard_la_SOURCES = libmatchbox-keyboard.c \
	libmatchbox-keyboard.h matchbox-keyboard.c matchbox-keyboard.h \
	matchbox-keyboard-layout.c matchbox-keyboard-row.c \
	matchbox-keyboard-key.c matchbox-keyboard-ui.c config-parser.c \
	util-list.c util.c $(XFT_BACKEND_C) $(CAIRO_BACKEND_C) $(NULL) \
	$(am__append_2)
libmatchbox_keyboard_la_CFLAGS = -I$(top_srcdir) -I$(top_builddir) \
	$(NULL) $(am__append_3)
libmatchbox_keyboard_la_LIBADD = $(FAKEKEY_LIBS) $(XFT_LIBS) \
	$(EXPAT_LIBS) $(CAIRO_LIBS) $(PNG_LIBS) $(am__append_4)
matchbox_keyboard_LDADD = \
	$(FAKEKEY_LIBS) $(XFT_LIBS) $(EXPAT_LIBS) $(CAIRO_LIBS) $(PNG_LIBS) \
	libmatchbox-keyboard.la

matchbox_keyboard_SOURCES = \
	main.c						\
	matchbox-keyboard.h         			\
	matchbox-keyboard-layout.c                      \
        matchbox-keyboard-xembed.c                      \
        matchbox-keyboard-remote.c                      \
        matchbox-keyboard-remote.h                     	\
	$(NULL)

CLEANFILES = $(BUILT_SOURCES) libmatchbox-keyboard.pc
EXTRA_DIST = $(pkgconfig_DATA)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
libmatchbox-keyboard.pc: $(top_builddir)/config.status $(srcdir)/libmatchbox-keyboard.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libmatchbox-keyboard.la: $(libmatchbox_keyboard_la_OBJECTS) $(libmatchbox_keyboard_la_DEPENDENCIES) $(EXTRA_libmatchbox_keyboard_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libmatchbox_keyboard_la_LINK) -rpath $(libdir) $(libmatchbox_keyboard_la_OBJECTS) $(libmatchbox_keyboard_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
matchbox-keyboard$(EXEEXT): $(matchbox_keyboard_OBJECTS) $(matchbox_keyboard_DEPENDENCIES) $(EXTRA_matchbox_keyboard_DEPENDENCIES) 
	@rm -f matchbox-keyboard$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(matchbox_keyboard_OBJECTS) $(matchbox_keyboard_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libmatchbox_keyboard_la-config-parser.Plo
include ./$(DEPDIR)/libmatchbox_keyboard_la-libmatchbox-keyboard.Plo
include ./$(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-image.Plo
include ./$(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-key.Plo
include ./$(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-layout.Plo
include ./$(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-popup.Plo
include ./$(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-row.Plo
include ./$(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-ui-cairo-backend.Plo
include ./$(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-ui-xft-backend.Plo
include ./$(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-ui.Plo
include ./$(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard.Plo
include ./$(DEPDIR)/libmatchbox_keyboard_la-mb-gtk-keyboard.Plo
include ./$(DEPDIR)/libmatchbox_keyboard_la-util-list.Plo
include ./$(DEPDIR)/libmatchbox_keyboard_la-util.Plo
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/matchbox-keyboard-layout.Po
include ./$(DEPDIR)/matchbox-keyboard-remote.Po
include ./$(DEPDIR)/matchbox-keyboard-xembed.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libmatchbox_keyboard_la-libmatchbox-keyboard.lo: libmatchbox-keyboard.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -MT libmatchbox_keyboard_la-libmatchbox-keyboard.lo -MD -MP -MF $(DEPDIR)/libmatchbox_keyboard_la-libmatchbox-keyboard.Tpo -c -o libmatchbox_keyboard_la-libmatchbox-keyboard.lo `test -f 'libmatchbox-keyboard.c' || echo '$(srcdir)/'`libmatchbox-keyboard.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmatchbox_keyboard_la-libmatchbox-keyboard.Tpo $(DEPDIR)/libmatchbox_keyboard_la-libmatchbox-keyboard.Plo
#	$(AM_V_CC)source='libmatchbox-keyboard.c' object='libmatchbox_keyboard_la-libmatchbox-keyboard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -c -o libmatchbox_keyboard_la-libmatchbox-keyboard.lo `test -f 'libmatchbox-keyboard.c' || echo '$(srcdir)/'`libmatchbox-keyboard.c

libmatchbox_keyboard_la-matchbox-keyboard.lo: matchbox-keyboard.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -MT libmatchbox_keyboard_la-matchbox-keyboard.lo -MD -MP -MF $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard.Tpo -c -o libmatchbox_keyboard_la-matchbox-keyboard.lo `test -f 'matchbox-keyboard.c' || echo '$(srcdir)/'`matchbox-keyboard.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard.Tpo $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard.Plo
#	$(AM_V_CC)source='matchbox-keyboard.c' object='libmatchbox_keyboard_la-matchbox-keyboard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -c -o libmatchbox_keyboard_la-matchbox-keyboard.lo `test -f 'matchbox-keyboard.c' || echo '$(srcdir)/'`matchbox-keyboard.c

libmatchbox_keyboard_la-matchbox-keyboard-layout.lo: matchbox-keyboard-layout.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -MT libmatchbox_keyboard_la-matchbox-keyboard-layout.lo -MD -MP -MF $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-layout.Tpo -c -o libmatchbox_keyboard_la-matchbox-keyboard-layout.lo `test -f 'matchbox-keyboard-layout.c' || echo '$(srcdir)/'`matchbox-keyboard-layout.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-layout.Tpo $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-layout.Plo
#	$(AM_V_CC)source='matchbox-keyboard-layout.c' object='libmatchbox_keyboard_la-matchbox-keyboard-layout.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -c -o libmatchbox_keyboard_la-matchbox-keyboard-layout.lo `test -f 'matchbox-keyboard-layout.c' || echo '$(srcdir)/'`matchbox-keyboard-layout.c

libmatchbox_keyboard_la-matchbox-keyboard-row.lo: matchbox-keyboard-row.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -MT libmatchbox_keyboard_la-matchbox-keyboard-row.lo -MD -MP -MF $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-row.Tpo -c -o libmatchbox_keyboard_la-matchbox-keyboard-row.lo `test -f 'matchbox-keyboard-row.c' || echo '$(srcdir)/'`matchbox-keyboard-row.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-row.Tpo $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-row.Plo
#	$(AM_V_CC)source='matchbox-keyboard-row.c' object='libmatchbox_keyboard_la-matchbox-keyboard-row.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -c -o libmatchbox_keyboard_la-matchbox-keyboard-row.lo `test -f 'matchbox-keyboard-row.c' || echo '$(srcdir)/'`matchbox-keyboard-row.c

libmatchbox_keyboard_la-matchbox-keyboard-key.lo: matchbox-keyboard-key.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -MT libmatchbox_keyboard_la-matchbox-keyboard-key.lo -MD -MP -MF $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-key.Tpo -c -o libmatchbox_keyboard_la-matchbox-keyboard-key.lo `test -f 'matchbox-keyboard-key.c' || echo '$(srcdir)/'`matchbox-keyboard-key.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-key.Tpo $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-key.Plo
#	$(AM_V_CC)source='matchbox-keyboard-key.c' object='libmatchbox_keyboard_la-matchbox-keyboard-key.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -c -o libmatchbox_keyboard_la-matchbox-keyboard-key.lo `test -f 'matchbox-keyboard-key.c' || echo '$(srcdir)/'`matchbox-keyboard-key.c

libmatchbox_keyboard_la-matchbox-keyboard-ui.lo: matchbox-keyboard-ui.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -MT libmatchbox_keyboard_la-matchbox-keyboard-ui.lo -MD -MP -MF $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-ui.Tpo -c -o libmatchbox_keyboard_la-matchbox-keyboard-ui.lo `test -f 'matchbox-keyboard-ui.c' || echo '$(srcdir)/'`matchbox-keyboard-ui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-ui.Tpo $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-ui.Plo
#	$(AM_V_CC)source='matchbox-keyboard-ui.c' object='libmatchbox_keyboard_la-matchbox-keyboard-ui.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -c -o libmatchbox_keyboard_la-matchbox-keyboard-ui.lo `test -f 'matchbox-keyboard-ui.c' || echo '$(srcdir)/'`matchbox-keyboard-ui.c

libmatchbox_keyboard_la-config-parser.lo: config-parser.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -MT libmatchbox_keyboard_la-config-parser.lo -MD -MP -MF $(DEPDIR)/libmatchbox_keyboard_la-config-parser.Tpo -c -o libmatchbox_keyboard_la-config-parser.lo `test -f 'config-parser.c' || echo '$(srcdir)/'`config-parser.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmatchbox_keyboard_la-config-parser.Tpo $(DEPDIR)/libmatchbox_keyboard_la-config-parser.Plo
#	$(AM_V_CC)source='config-parser.c' object='libmatchbox_keyboard_la-config-parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -c -o libmatchbox_keyboard_la-config-parser.lo `test -f 'config-parser.c' || echo '$(srcdir)/'`config-parser.c

libmatchbox_keyboard_la-util-list.lo: util-list.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -MT libmatchbox_keyboard_la-util-list.lo -MD -MP -MF $(DEPDIR)/libmatchbox_keyboard_la-util-list.Tpo -c -o libmatchbox_keyboard_la-util-list.lo `test -f 'util-list.c' || echo '$(srcdir)/'`util-list.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmatchbox_keyboard_la-util-list.Tpo $(DEPDIR)/libmatchbox_keyboard_la-util-list.Plo
#	$(AM_V_CC)source='util-list.c' object='libmatchbox_keyboard_la-util-list.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -c -o libmatchbox_keyboard_la-util-list.lo `test -f 'util-list.c' || echo '$(srcdir)/'`util-list.c

libmatchbox_keyboard_la-util.lo: util.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -MT libmatchbox_keyboard_la-util.lo -MD -MP -MF $(DEPDIR)/libmatchbox_keyboard_la-util.Tpo -c -o libmatchbox_keyboard_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmatchbox_keyboard_la-util.Tpo $(DEPDIR)/libmatchbox_keyboard_la-util.Plo
#	$(AM_V_CC)source='util.c' object='libmatchbox_keyboard_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -c -o libmatchbox_keyboard_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

libmatchbox_keyboard_la-matchbox-keyboard-ui-xft-backend.lo: matchbox-keyboard-ui-xft-backend.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -MT libmatchbox_keyboard_la-matchbox-keyboard-ui-xft-backend.lo -MD -MP -MF $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-ui-xft-backend.Tpo -c -o libmatchbox_keyboard_la-matchbox-keyboard-ui-xft-backend.lo `test -f 'matchbox-keyboard-ui-xft-backend.c' || echo '$(srcdir)/'`matchbox-keyboard-ui-xft-backend.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-ui-xft-backend.Tpo $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-ui-xft-backend.Plo
#	$(AM_V_CC)source='matchbox-keyboard-ui-xft-backend.c' object='libmatchbox_keyboard_la-matchbox-keyboard-ui-xft-backend.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -c -o libmatchbox_keyboard_la-matchbox-keyboard-ui-xft-backend.lo `test -f 'matchbox-keyboard-ui-xft-backend.c' || echo '$(srcdir)/'`matchbox-keyboard-ui-xft-backend.c

libmatchbox_keyboard_la-matchbox-keyboard-image.lo: matchbox-keyboard-image.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -MT libmatchbox_keyboard_la-matchbox-keyboard-image.lo -MD -MP -MF $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-image.Tpo -c -o libmatchbox_keyboard_la-matchbox-keyboard-image.lo `test -f 'matchbox-keyboard-image.c' || echo '$(srcdir)/'`matchbox-keyboard-image.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-image.Tpo $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-image.Plo
#	$(AM_V_CC)source='matchbox-keyboard-image.c' object='libmatchbox_keyboard_la-matchbox-keyboard-image.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -c -o libmatchbox_keyboard_la-matchbox-keyboard-image.lo `test -f 'matchbox-keyboard-image.c' || echo '$(srcdir)/'`matchbox-keyboard-image.c

libmatchbox_keyboard_la-matchbox-keyboard-ui-cairo-backend.lo: matchbox-keyboard-ui-cairo-backend.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -MT libmatchbox_keyboard_la-matchbox-keyboard-ui-cairo-backend.lo -MD -MP -MF $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-ui-cairo-backend.Tpo -c -o libmatchbox_keyboard_la-matchbox-keyboard-ui-cairo-backend.lo `test -f 'matchbox-keyboard-ui-cairo-backend.c' || echo '$(srcdir)/'`matchbox-keyboard-ui-cairo-backend.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-ui-cairo-backend.Tpo $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-ui-cairo-backend.Plo
#	$(AM_V_CC)source='matchbox-keyboard-ui-cairo-backend.c' object='libmatchbox_keyboard_la-matchbox-keyboard-ui-cairo-backend.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -c -o libmatchbox_keyboard_la-matchbox-keyboard-ui-cairo-backend.lo `test -f 'matchbox-keyboard-ui-cairo-backend.c' || echo '$(srcdir)/'`matchbox-keyboard-ui-cairo-backend.c

libmatchbox_keyboard_la-matchbox-keyboard-popup.lo: matchbox-keyboard-popup.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -MT libmatchbox_keyboard_la-matchbox-keyboard-popup.lo -MD -MP -MF $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-popup.Tpo -c -o libmatchbox_keyboard_la-matchbox-keyboard-popup.lo `test -f 'matchbox-keyboard-popup.c' || echo '$(srcdir)/'`matchbox-keyboard-popup.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-popup.Tpo $(DEPDIR)/libmatchbox_keyboard_la-matchbox-keyboard-popup.Plo
#	$(AM_V_CC)source='matchbox-keyboard-popup.c' object='libmatchbox_keyboard_la-matchbox-keyboard-popup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -c -o libmatchbox_keyboard_la-matchbox-keyboard-popup.lo `test -f 'matchbox-keyboard-popup.c' || echo '$(srcdir)/'`matchbox-keyboard-popup.c

libmatchbox_keyboard_la-mb-gtk-keyboard.lo: mb-gtk-keyboard.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -MT libmatchbox_keyboard_la-mb-gtk-keyboard.lo -MD -MP -MF $(DEPDIR)/libmatchbox_keyboard_la-mb-gtk-keyboard.Tpo -c -o libmatchbox_keyboard_la-mb-gtk-keyboard.lo `test -f 'mb-gtk-keyboard.c' || echo '$(srcdir)/'`mb-gtk-keyboard.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmatchbox_keyboard_la-mb-gtk-keyboard.Tpo $(DEPDIR)/libmatchbox_keyboard_la-mb-gtk-keyboard.Plo
#	$(AM_V_CC)source='mb-gtk-keyboard.c' object='libmatchbox_keyboard_la-mb-gtk-keyboard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatchbox_keyboard_la_CFLAGS) $(CFLAGS) -c -o libmatchbox_keyboard_la-mb-gtk-keyboard.lo `test -f 'mb-gtk-keyboard.c' || echo '$(srcdir)/'`mb-gtk-keyboard.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-libmatchbox_keyboard_includeHEADERS: $(libmatchbox_keyboard_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libmatchbox_keyboard_include_HEADERS)'; test -n "$(libmatchbox_keyboard_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libmatchbox_keyboard_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libmatchbox_keyboard_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libmatchbox_keyboard_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libmatchbox_keyboard_includedir)" || exit $$?; \
	done

uninstall-libmatchbox_keyboard_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libmatchbox_keyboard_include_HEADERS)'; test -n "$(libmatchbox_keyboard_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libmatchbox_keyboard_includedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(libmatchbox_keyboard_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libmatchbox_keyboard_includeHEADERS \
	install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-libmatchbox_keyboard_includeHEADERS \
	uninstall-pkgconfigDATA

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libmatchbox_keyboard_includeHEADERS install-man \
	install-pdf install-pdf-am install-pkgconfigDATA install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-libmatchbox_keyboard_includeHEADERS \
	uninstall-pkgconfigDATA


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
